----------
-- zm offline trade - реально удаляет лишние предметы из инвентаря мародеров, сдает их торговцам в обмен на бабло
----------

function update_trade()
-- от спавна броников изначальным трупам много глюков и вылетов, удалено
	local lname = level.name()
	local sname = ogsm.load_variable("level_on_save","")
	if (lname ~= sname and sname ~= "") then
		update_trade_on_sleep()
	end
    ogsm.load_variable("level_on_save",lname)
end

function update_trade_on_sleep()
	local obj, sect, parent_id, n
	local cnt = 0
	local parents = {}
	local sim = alife()
	for id=1,65535 do
		ob = level.object_by_id(id)
		if ob then
		    obj = sim:object(ob:id())
		    if obj and obj.parent_id and obj:section_name()~="helicopter_mi24" then
				parent_id = obj.parent_id
				if parent_id ~= 65535 and parent_id ~= 0 then
					if parents[parent_id] == nil then
						parents[parent_id] = {}
					end
					sect = obj:section_name()
					if parents[parent_id][sect] == nil then
						parents[parent_id][sect] = {}
					end
					table.insert(parents[parent_id][sect], id)
				end
		    end
		end
	end
	for k,v in pairs(parents) do
		sobj = sim:object(k) 
	    if sobj then
	        obj = level.object_by_id(sobj.id)
	        if obj and IsStalker(obj) and obj:alive() and obj:id()~=db.actor:id() and obj:character_community() and obj:character_community()~="zombied" and ngsm.IsSim(obj) then
		        for kk,vv in pairs(v) do
                    sellitem = sim:object(vv[1])
                    item = level.object_by_id(sellitem.id)
				    n = table.getn(vv)
			        -- оставляем в среднем не больше 3 предметов каждого типа
			        local zmm = math.random(2, 4)
			        if item and (string.find(item:section(), "outfit") or string.find(item:section(), "wpn") or string.find(item:section(), "af_")) then
				        zmm = 1 --броню и стволы оставляем по одной штуке каждого типа и каждой степени износа
			        end
		            if n >= zmm then
				        local zmn = zmm+1
				        for i=zmn,n do
                            sellitem = sim:object(vv[i])
                            local money = 0
                            local cost = get_item_cost(sellitem)
                            local coeff = math.random(30,50) / 100
                            local price = math.ceil(cost * coeff)
                            local money = money + price
                            local npc_id = obj:id() 
                            npc = obj
                            bst_trader = get_best_trader()
					        if (money > 0) and bst_trader and IsStalker(bst_trader) and bst_trader:alive() then
						        local old_money = ngsm_netpackets.read_stalker_params_money(npc_id)
						        if (old_money == nil) then
						            old_money = 0
						        end
						        local offmoney = sobj.offmoney
						        if (offmoney == nil) then
						            offmoney = 0
						        end
						        sobj.offmoney = offmoney + money --offmoney + old_money + 
					        end
				            if bst_trader and npc:id()~=bst_trader:id() then
				                item = level.object_by_id(sellitem.id)
				                npc:transfer_item(item, bst_trader)
				            else
					            if math.random() > 0.71 then
						            if sim:object(vv[i]) then	
					                    sim:release(sim:object(vv[i]), true) --не решил как лучше-торговец все барахло у себя оставляет, или дальше часть сбагривает
						            end
					            end
				            end
					    end
				    end
			    end
		    end
	    end
	end
end

function get_item_cost(item)
	local result = 0
	if (item and item.section_name) then
		result = utils.cfg_get_number(system_ini(), item:section_name(), "cost", item, false, 0)
	end
	return result/3
end

function get_best_trader() --на этих уровнях собранное барахло сдают торговцам с вероятностью 0.71, если они живы, а если мертвы - рассовывают по нычкам
    if  level.name()=="marsh" or level.name()=="escape" or level.name()=="garbage" or level.name()=="darkvalley" or level.name()=="agroprom" or level.name()=="yantar" then
	    best_trader = nil
	    for id=1,65535 do
		    local obj = level.object_by_id(id)
		    if obj and IsStalker(obj) and obj:alive() and obj:id()~=db.actor:id() and math.random() < 0.71 then
			    if string.find(obj:section(), "esc_trader_stalkerbase") or string.find(obj:section(), "m_trader") or string.find(obj:section(), "gar_bandit_trader") or
				string.find(obj:section(), "val_freedom_trader") or string.find(obj:section(), "agr_stalker_base_trader") or
				string.find(obj:section(), "agr_duty_base_trader") or string.find(obj:section(), "mar_csky_trader") or string.find(obj:section(), "stalker_sakharov") then
				    return obj
			    end
		    end
	    end
	    local par = {}
	    local i_box = nil
	    for id=1,65535 do
		    bx = level.object_by_id(id)
		    if bx and bx:clsid() == clsid.inventory_box and not string.find(bx:name(), "ruck") and not string.find(bx:section(), "smart_terrain") and not string.find(bx:section(), "ruck") and db.actor:position():distance_to(bx:position())>=70 then 
		        local i_box = bx
		        table.insert(par, bx)
		    end
	    end
	    if(#par~=0) then
	        i_box = par[math.random(1, #par)]
	        return i_box
	    end
	    return best_trader
    else  --на этих уровнях сталкеры рассовывают собранное барахло по нычкам
	    local par = {}
	    local i_box = nil
	    for id=1,65535 do
		    bx = level.object_by_id(id)
		    if bx and bx:clsid() == clsid.inventory_box and not string.find(bx:name(), "smart_terrain") and  --name() или section() вопрос дописать и то и другое и в atmcleaner тоже
		        not string.find(bx:name(), "ruck")	and not string.find(bx:section(), "smart_terrain") and not string.find(bx:section(), "ruck") and db.actor:position():distance_to(bx:position())>=70 then 
		        local i_box = bx
		        table.insert(par, bx)
		    end
	    end
	    if(#par~=0) then
	        i_box = par[math.random(1, #par)]
	        return i_box
	    end
    end
end