function normalize(val, min, max)
	local d = 100*(val-min)/(max-min)
	if d < 0 then
		return 0
	end
	return d
end

function normalizeMP(val)
	if val > 100 then
		val = 100
	elseif val < 1 then
		val  = 1
	end
	return val
end

function read_if_exist(section, value, default)
    local ltx = system_ini()
    if ltx:section_exist(section) and ltx:line_exist(section,value) then
		return ltx:r_float(section,value)
	else
		return default
	end
end

function read_float(wpn_section, upgr_sections, param)
	local ltx = system_ini()
    local res = ltx:r_float(wpn_section, param)
	if upgr_sections == nil or upgr_sections == "" then
        return res
    end
	for k, sect in pairs(parse_names(upgr_sections)) do 
		if param == "hit_power" then
			if res < read_if_exist(sect, param, 0) then
				res = read_if_exist(sect, param, 0)
			end	
		else	
			res = res + read_if_exist(sect, param, 0)
		end		
    end 
    return res
end

--Повреждение MP
function GetDamageMP(wpn_section, upgr_sections)
	local hit_power = read_float(wpn_section, upgr_sections, "hit_power")
	hit_power = hit_power * 100	
	return normalizeMP(hit_power)	
end

--Повреждение
function GetDamage(wpn_section, upgr_sections)
	local hit_power = read_float(wpn_section, upgr_sections, "hit_power")
	return normalize(hit_power, 0, 1.1)
end

--Точность
function GetAccuracy(wpn_section, upgr_sections)
    local fire_dispersion_base	= read_float(wpn_section, upgr_sections, "fire_dispersion_base")
	fire_dispersion_base = 1.5 - fire_dispersion_base
	return normalize(fire_dispersion_base, 0, 1.5)
end

--Cкорострельность
function GetRPM(wpn_section, upgr_sections)
	local rpm = read_float(wpn_section, upgr_sections, "rpm")
	return normalize(rpm, 0, 1300)
end

--Отдача
function GetHandling(wpn_section, upgr_sections) 
    local cam_dispersion = read_float(wpn_section, upgr_sections, "cam_dispersion")
	return normalize(cam_dispersion, 0, 5.5) 
end