------------------------------ Copyright 2007-2011 DEXXX ------------------------------
---------------------------------- –еспавнер монстров ---------------------------------
------------------------- Last edit (by Kirgudu): 04.09.2018 --------------------------

-- Ќастройка
t_spawn = 6 -- периодичность респавна в игровых часах
local resp_index = 1 -- множитель респавна
local queue_timer_delta = 5000 -- период срабатывани€ таймера отложенного спавна, миллисекунды реального времени

-- “ехнологические переменные
local list_mob_ids = {} -- хранилище монстров, управл€емых респавнером
local delayed_spawn = {} -- хранилище очереди отложенного спавна
local respawn_radius = utils.cfg_get_number(system_ini(), "alife", "switch_distance", nil, false, 150) -- радиус респавна - т.е. спавн будем разрешать только тогда, когда игрок находитс€ от респавнера дальше, чем дистанци€ алайфа в игре
local current_level = "" -- наименование текущего уровн€
local forced_spawn = false -- признак принудительного спавна вне зависимости от рассто€ни€ до актора (исп. при первом старте игры и старте фрипле€)
local actor_pos = db.actor and db.actor:position() or vector():set(0,0,0) -- позици€ актора (обновл€етс€ при попытке спавна)
local active_queue = false -- признак наличи€ активной очереди отложенного спавна
local queue_timer = 0 -- таймер проверки отложенного спавна
local sim = alife()

-- ѕолучение списка всех монстров на текущей локации
function get_level_mobs()
	if not sim then sim = alife() end
	current_level = level.name()
	local obj = nil
	for i = 1, 65534 do
		obj = sim:object(i)
		if obj then
			if string.find(ogsm_packet.get_monster_portion(obj.id), current_level) then
				list_mob_ids[obj.id] = obj.id
			end
		end
	end
	if not active_queue and type(delayed_spawn[current_level]) == "table" and next(delayed_spawn[current_level]) ~= nil then
		active_queue = true
		queue_timer = time_global() + queue_timer_delta
		level.add_call(queued_spawn, function() active_queue = false end)
		-- ogsm.dbglog("respawn::> check queue start: level=["..level.name().."], time=["..time_global().."], timer=["..queue_timer.."]")
	end
end

-- ”даление трупов монстров
function remove_corpse(p_id)
	local obj = sim:object(p_id)
	if obj then
		ogsm.dbglog("ogsm_respawn_release_"..obj:name())
		sim:release(obj, true)
		list_mob_ids[p_id] = nil
	end
end

-- —охранение очереди отложенного спавна
function save()
	SetVar("ogsm_respawn_queue", delayed_spawn)
end

-- «агрузка очереди отложенного спавна
function load()
	delayed_spawn = GetVar("ogsm_respawn_queue", {})
	DelVar("ogsm_respawn_queue")
end

-- ќтложенный спавн
function queued_spawn()
	local queue, current_time = delayed_spawn[current_level], time_global()
	local id, cnt = 1, #queue
	-- ogsm.dbglog("respawn::> queue can spawn start: can=["..tostring(cnt > 0).."]")

	if queue_timer < current_time and cnt > 0 then
		-- ogsm.dbglog("respawn::> queue spawn attempt start: time=["..current_time.."], timer=["..queue_timer.."], queue=["..table.size(queue).."]")
		actor_pos = db.actor and db.actor:position() or vector():set(0,0,0)
		while cnt > 0 and id <= cnt do
			local v = queue[id]
			-- ogsm.dbglog("respawn::> queue spawn attempt: level=["..level.name().."], index=["..id.."], count=["..tostring(cnt).."]")
			if v and actor_pos:distance_to(v.p_vector) > respawn_radius then
				-- ogsm.dbglog("respawn::> queue spawn: level=["..level.name().."], name=["..v.p_name.."]")
				execute_spawn(v.p_name, v.p_vector, v.p_lv, v.p_gv, v.p_count, v.p_portion, v.p_logic)
				table.remove(queue, id)
				cnt = #queue
			else
				id = id + 1
			end
			-- ogsm.dbglog("respawn::> queue spawn attempt end: level=["..level.name().."], name=["..v.p_name.."]")
		end
		-- ogsm.dbglog("respawn::> queue can spawn end: can=["..tostring(cnt > 0).."]")
	end

	return cnt == 0
end

-- —павн с опциональной проверкой на рассто€ние
function proceed_spawn(p_name, p_vector, p_lv, p_gv, p_count, p_portion, p_logic)
	-- ogsm.dbglog("respawn::> spawn attempt: level=["..level.name().."], name=["..p_name.."]")
	if forced_spawn or actor_pos:distance_to(p_vector) > respawn_radius then
		-- ogsm.dbglog("respawn::> forced spawn or not in alife: level=["..level.name().."], name=["..p_name.."]")
		execute_spawn(p_name, p_vector, p_lv, p_gv, p_count, p_portion, p_logic)
		return
	end
	-- ogsm.dbglog("respawn::> spawn attempt failed: level=["..level.name().."], name=["..p_name.."]")

	-- если актор близко и спавн не принудительный - помещаем в очередь
	if delayed_spawn[current_level] == nil then delayed_spawn[current_level] = {} end
	local queue = delayed_spawn[current_level]
	-- ogsm.dbglog("respawn::> spawn check queue: level=["..level.name().."], name=["..p_name.."]")
	-- table.print(queue)
	for _,v in ipairs(queue) do
		-- ogsm.dbglog("respawn::> spawn check queue item: p_name=["..v.p_name.."], p_vector=["..VecToStr(v.p_vector).."], p_lv=["..tostring(v.p_lv).."], p_gv=["..tostring(v.p_gv).."], p_count=["..tostring(v.p_count).."], p_portion=["..v.p_portion.."], p_logic=["..tostring(v.p_logic).."]")
		-- ogsm.dbglog("respawn::> spawn check new item: p_name=["..p_name.."], p_vector=["..VecToStr(p_vector).."], p_lv=["..tostring(p_lv).."], p_gv=["..tostring(p_gv).."], p_count=["..tostring(p_count).."], p_portion=["..p_portion.."], p_logic=["..tostring(p_logic).."]")
		if v and p_name == v.p_name and p_vector:similar(v.p_vector, 0.1) and p_lv == v.p_lv and p_gv == v.p_gv and p_count == v.p_count and p_portion == v.p_portion and p_logic == v.p_logic then
			-- ogsm.dbglog("respawn::> spawn already in queue: level=["..level.name().."], name=["..p_name.."]")
			return
		end
	end
	-- ogsm.dbglog("respawn::> spawn add to queue: level=["..level.name().."], name=["..p_name.."]")
	-- ogsm.dbglog("respawn::> queue new item: p_name=["..p_name.."], p_vector=["..VecToStr(p_vector).."], p_lv=["..tostring(p_lv).."], p_gv=["..tostring(p_gv).."], p_count=["..tostring(p_count).."], p_portion=["..p_portion.."], p_logic=["..tostring(p_logic).."]")
	table.insert(queue, {["p_name"] = p_name, ["p_vector"] = p_vector, ["p_lv"] = p_lv, ["p_gv"] = p_gv, ["p_count"] = p_count, ["p_portion"] = p_portion, ["p_logic"] = p_logic})
	if not active_queue then
		active_queue = true
		queue_timer = time_global() + queue_timer_delta
		level.add_call(queued_spawn, function() active_queue = false end)
		-- ogsm.dbglog("respawn::> check queue start: level=["..level.name().."], name=["..p_name.."], time=["..time_global().."], timer=["..queue_timer.."]")
	end
	-- ogsm.dbglog("respawn::> spawn attempt end: level=["..level.name().."], name=["..p_name.."], queue=["..table.size(queue).."]")
end

-- —обственно, сам спавн
function execute_spawn(p_name, p_vector, p_lv, p_gv, p_count, p_portion, p_logic)
	local ind
	local cnt = 0

	for k,v in pairs(list_mob_ids) do
		local obj = sim:object(k)
		local portion = ogsm_packet.get_monster_portion(k)
		if obj and portion == p_portion then
			if obj:alive() then
				cnt = cnt + 1
			else
				remove_corpse(k)
			end
		end
	end

	local qnt

	if cnt == 0 then qnt = p_count else qnt = resp_index * p_count - cnt end
	if qnt < 1 then return end

	for ind = 1, qnt do
		local sp_ob = ogsm_packet.spawn_monster(p_name, p_vector, p_lv, p_gv, p_portion, p_logic)
		if ogsm.dbgset then level.map_add_object_spot_ser(sp_ob.id, "red_location", p_portion) end
		list_mob_ids[sp_ob.id] = sp_ob.id
	end
end

-- —павн на всех локаци€х при первом запуске мода
function startup_spawn()
	level_spawn("marsh", true)
	level_spawn("darkvalley", true)
	level_spawn("agroprom", true)
	level_spawn("military", true)
	level_spawn("agroprom_underground", true)
	level_spawn("jupiter_underground", true)
end

-- —павн по сработавшему таймеру
function timer_spawn()
	level_spawn(level.name())
	ogsm.g_start_timer("rsp", 0, t_spawn + math.random(-1,1), 0)
end

-- —павн дл€ каждого уровн€ (вызываетс€ из респавнера)
function level_spawn(level_name, forced)
	current_level = level.name()
	forced_spawn = (forced == true) or (level_name ~= current_level)
	actor_pos = db.actor and db.actor:position() or vector():set(0,0,0)

	-- Ѕолота
	if level_name == "marsh" then
		if has_alife_info("mar_tutorial_returned_got_on_feet") then
			proceed_spawn("boar_strong", vector():set(-287.700,0.857,4.900),4960,156, 3, "marsh_boar_portion_1")
		end
		if has_alife_info("red_bridge_finished") then
			proceed_spawn("electro_chimera", vector():set(502.600,1.174,247.800),482034,126, 1, "marsh_echimera_portion_1")
			proceed_spawn("electro_chimera", vector():set(419.300,0.566,18.900),416676,103, 1, "marsh_echimera_portion_2")
			proceed_spawn("chimera_weak", vector():set(-181.300,0.923,175.700),50333,114, 1, "marsh_chimera_portion_1")
		else
			proceed_spawn("tushkano_normal", vector():set(502.600,1.174,247.800),482034,126, 5, "marsh_tushkano_portion_3")
			proceed_spawn("tushkano_normal", vector():set(419.300,0.566,18.900),416676,103, 5, "marsh_tushkano_portion_4")
			proceed_spawn("tushkano_normal", vector():set(-181.300,0.923,175.700),50333,114, 5, "marsh_tushkano_portion_5")
		end
		proceed_spawn("tushkano_normal", vector():set(-30.100,1.079,454.300),125232,116, 5, "marsh_tushkano_portion_1")
		proceed_spawn("tushkano_normal", vector():set(306.600,1.847,411.600),336700,88, 5, "marsh_tushkano_portion_2")
		proceed_spawn("zombie_1", vector():set(346.500,7.835,-76.300),361333,45, 1, "marsh_zombie_portion_1", "random_fake")
		proceed_spawn("zombie_2", vector():set(345.100,7.840,-69.300),360152,45, 1, "marsh_zombie_portion_2", "random_fake")
		proceed_spawn("zombie_3", vector():set(327.600,7.292,-72.100),348408,45, 1, "marsh_zombie_portion_3", "random_fake")
		proceed_spawn("zombie_rotten_1", vector():set(316.400,7.239,-74.200),341960,45, 1, "marsh_zombie_portion_4", "random_fake")
		proceed_spawn("zombie_rotten_2", vector():set(333.200,7.835,-98.700),351554,58, 1, "marsh_zombie_portion_5", "random_fake")
		proceed_spawn("pseudodog_weak", vector():set(164.500,10.204,562.800),232515,229, 3, "marsh_pseudodog_portion_1")
	end

	if level_name == "escape" then
		proceed_spawn("bloodsucker_normal", vector():set(364.000,20.352,281.400),622757,658, 1, "escape_bloodsucker_portion_1")
		if has_alife_info("red_bridge_finished") then
			proceed_spawn("chimera_weak", vector():set(-46.900,-18.747,-195.300),242843,703, 1, "escape_chimera_portion_1")
		end
	end

	if level_name == "garbage" then
		if has_alife_info("red_bridge_finished") then
			proceed_spawn("electro_chimera", vector():set(-218.400,-2.236,82.600),14036,409, 1, "garbage_echimera_portion_1")
		end
	end

	if level_name == "darkvalley" then
		proceed_spawn("zombie_rotten_1", vector():set(-78.400,0.372,64.400),81723,830, 3, "darkvalley_zombie_portion_1", "random_fake")
		proceed_spawn("zombie_rotten_2", vector():set(19.600,5.531,102.900),184916,832, 3, "darkvalley_zombie_portion_2", "random_fake")
		proceed_spawn("zombie_1", vector():set(101.500,0.039,-40.600),270067,944, 3, "darkvalley_zombie_portion_3", "fake")
		proceed_spawn("bloodsucker_strong", vector():set(118.300,-0.067,98.000),287818,833, 1, "darkvalley_bloodsucker_portion_1")
		proceed_spawn("bloodsucker_strong", vector():set(182.000,5.538,-362.600),353475,839, 1, "darkvalley_bloodsucker_portion_2")
	end

	if level_name == "agroprom" then
		if has_alife_info("red_bridge_finished") then
			proceed_spawn("gigant_normal", vector():set(-25.200,-4.912,-286.300),129755,1058, 1, "agroprom_gigant_portion_1")
		else
			proceed_spawn("zombie_rotten_1", vector():set(-25.200,-4.912,-286.300),129755,1058, 1, "agroprom_zombie_portion_1")
			proceed_spawn("zombie_rotten_2", vector():set(-22.400,-4.908,-284.900),131899,1058, 1, "agroprom_zombie_portion_2")
		end
	end

	if level_name == "agroprom_underground" then
		proceed_spawn("snork_weak", vector():set(59.500,-19.498,-172.900),1086,1511, 1, "agroprom_underground_snork_portion_1")
		proceed_spawn("snork_normal", vector():set(98.000,-19.498,-159.600),2335,1511, 1, "agroprom_underground_snork_portion_2")
		proceed_spawn("snork_strong", vector():set(123.200,-19.498,-98.700),4701,1512, 1, "agroprom_underground_snork_portion_3")
		proceed_spawn("snork_weak", vector():set(120.400,-19.498,-75.600),4278,1513, 1, "agroprom_underground_snork_portion_4")
		proceed_spawn("zombie_1", vector():set(105.700,-7.728,12.600),2778,1513, 1, "agroprom_underground_zombie_portion_1", "fake")
		proceed_spawn("zombie_rotten_1", vector():set(112.700,-7.735,28.700),3673,1513, 1, "agroprom_underground_zombie_portion_2", "fake")
		proceed_spawn("zombie_rotten_2", vector():set(104.300,-7.735,42.000),2694,1515, 1, "agroprom_underground_zombie_portion_3", "fake")
		proceed_spawn("zombie_1", vector():set(110.600,-7.863,5.600),3447,1513, 1, "agroprom_underground_zombie_portion_4", "random_fake")
		proceed_spawn("zombie_rotten_1", vector():set(115.500,-6.895,-1.400),3887,1513, 1, "agroprom_underground_zombie_portion_5", "random_fake")
		proceed_spawn("zombie_rotten_2", vector():set(107.800,-6.895,-15.400),2983,1513, 1, "agroprom_underground_zombie_portion_6", "random_fake")
		proceed_spawn("zombie_1", vector():set(126.700,-7.085,-36.400),4820,1513, 1, "agroprom_underground_zombie_portion_7", "random_fake")
		proceed_spawn("zombie_rotten_1", vector():set(108.500,-6.895,-42.000),3083,1513, 1, "agroprom_underground_zombie_portion_8", "random_fake")
		proceed_spawn("zombie_rotten_2", vector():set(102.200,-6.718,-51.100),2548,1513, 1, "agroprom_underground_zombie_portion_9", "random_fake")
	end

	if level_name == "military" then
		proceed_spawn("zombie_kamikaze", vector():set(74.200,-12.868,410.200),348681,1433, 3, "military_kamikaze_portion_1")
		proceed_spawn("chimera_weak", vector():set(-77.700,-7.826,413.000),222810,1323, 2, "military_chimera_portion_1")
		proceed_spawn("electro_chimera", vector():set(51.100,-8.690,-2.100),331027,1405, 1, "military_echimera_portion_1")
		proceed_spawn("zombie_plague", vector():set(-292.600,-18.621,166.600),46982,1377, 1, "military_plague_portion_1", "random_fake")
		proceed_spawn("zombie_plague", vector():set(-281.400,-17.814,171.500),55857,1382, 1, "military_plague_portion_2", "random_fake")
		proceed_spawn("zombie_plague", vector():set(-190.507,-21.145,190.422),125041,1350, 1, "military_plague_portion_3", "random_fake")
		proceed_spawn("zombie_plague", vector():set(-196.868,-21.807,184.402),120165,1350, 1, "military_plague_portion_4", "random_fake")
		proceed_spawn("zombie_plague", vector():set(-217.000,-20.533,244.300),104343,1408, 1, "military_plague_portion_5", "random_fake")
		proceed_spawn("zombie_plague", vector():set(-215.600,-20.471,245.000),105436,1408, 1, "military_plague_portion_6", "random_fake")
		proceed_spawn("zombie_plague", vector():set(-336.517,-21.351,291.332),15713,1338, 1, "military_plague_portion_7", "random_fake")
		proceed_spawn("zombie_plague", vector():set(-329.921,-21.545,291.405),20178,1338, 1, "military_plague_portion_8", "random_fake")
		proceed_spawn("burer_weak", vector():set(63.000,-13.078,60.900),339746,1425, 1, "military_burer_portion_1")
		proceed_spawn("zombie_2", vector():set(26.600,-8.860,-52.500),312545,1449, 1, "military_zombie_portion_1", "fake")
		proceed_spawn("zombie_3", vector():set(23.100,-8.860,-51.100),309786,1449, 1, "military_zombie_portion_2", "fake")
		proceed_spawn("zombie_rotten_1", vector():set(-46.900,-11.430,-46.200),247626,1501, 1, "military_zombie_portion_3", "fake")
		proceed_spawn("zombie_rotten_2", vector():set(-51.800,-11.779,-48.300),243578,1501, 1, "military_zombie_portion_4", "fake")
		if has_alife_info("red_bridge_finished") then
			proceed_spawn("m_controller_old_fat", vector():set(-291.666,-22.165,291.253),47660,1389, 1, "military_controller_portion_1")
		else
			proceed_spawn("bloodsucker_strong", vector():set(-147,1.572,-63.700),161451,1501, 1, "military_bloodsucker_portion_1")
		end
	end

	if level_name == "yantar" then
		if has_alife_info("yan_go_to_red_forest_cut6") then
			proceed_spawn("m_controller_old", vector():set(29.400,0.052,-54.600),73625,1246, 1, "yantar_controller_portion_1")
			proceed_spawn("psy_dog", vector():set(142.100,0.540,-212.800),132592,1232, 1, "yantar_dog_portion_1")
			proceed_spawn("zombie_kamikaze", vector():set(-173.600,3.327,-159.600),5125,1226, 4, "yantar_kamikaze_portion_1")
			proceed_spawn("zombie_kamikaze", vector():set(-96.600,-11.436,-270.200),26139,1225, 4, "yantar_kamikaze_portion_2")
			proceed_spawn("zombie_kamikaze", vector():set(-12.600,-0.258,-82.600),55462,1275, 4, "yantar_kamikaze_portion_3")
			proceed_spawn("zombie_kamikaze", vector():set(160.300,-6.697,-60.200),140459,1271, 4, "yantar_kamikaze_portion_4")
			proceed_spawn("zombie_plague", vector():set(88.200,0.089,51.800),102351,1243, 2, "yantar_zombie_portion_1", "random_fake")
			proceed_spawn("zombie_plague", vector():set(13.300,0.299,-128.100),66776,1254, 2, "yantar_zombie_portion_2", "random_fake")
			proceed_spawn("zombie_plague", vector():set(-15.400,0.199,9.800),54265,1217, 2, "yantar_zombie_portion_3")
			proceed_spawn("zombie_plague", vector():set(13.300,0.034,-18.200),66857,1247, 2, "yantar_zombie_portion_4")
			proceed_spawn("electro_chimera", vector():set(74.200,0.089,-44.100),96114,1241, 1, "yantar_echimera_portion_1")
		end
	end

	if level_name == "red_forest" then
		if has_alife_info("red_bridge_finished") then
			proceed_spawn("burer_weak", vector():set(-114.800,-0.644,-217.700),8408,1013, 1, "red_forest_burer_portion_1")
		end
	end

	if level_name == "jupiter_underground" then
		proceed_spawn("bloodsucker_strong", vector():set(-0.700,8.075,406.000),13190,1623, 1, "jupiter_underground_bloodsucker_portion_1")
		proceed_spawn("bloodsucker_strong", vector():set(7.000,8.003,191.800),17718,1632, 1, "jupiter_underground_bloodsucker_portion_2")
		proceed_spawn("bloodsucker_strong", vector():set(62.303,4.542,-223.230),38753,1669, 1, "jupiter_underground_bloodsucker_portion_3")
		proceed_spawn("zombie_rotten_1", vector():set(-4.900,9.406,347.900),10144,1626, 2, "jupiter_underground_zombie_portion_1")
		proceed_spawn("zombie_rotten_2", vector():set(17.500,9.406,346.500),24925,1626, 2, "jupiter_underground_zombie_portion_2")
		proceed_spawn("snork_strong", vector():set(5.600,8.069,281.400),16894,1629, 3, "jupiter_underground_snork_portion_1")
		proceed_spawn("snork_strong", vector():set(-54.600,3.246,-0.700),329,1649, 1, "jupiter_underground_snork_portion_2")
		proceed_spawn("snork_strong", vector():set(6.731,0.374,0.350),17627,1646, 3, "jupiter_underground_snork_portion_3")
		proceed_spawn("snork_strong", vector():set(-54.287,3.206,0.559),331,1649, 3, "jupiter_underground_snork_portion_4")
		proceed_spawn("snork_strong", vector():set(25.352,-0.000,41.953),28322,1643, 3, "jupiter_underground_snork_portion_5")
		proceed_spawn("snork_strong", vector():set(-3.706,0.006,67.577),10934,1645, 3, "jupiter_underground_snork_portion_6")
		proceed_spawn("electro_chimera", vector():set(22.455,0.375,-20.350),27357,1654, 1, "jupiter_underground_chimera_portion_1")
		proceed_spawn("gigant_normal", vector():set(8.400,0.373,9.800),18594,1646, 1, "jupiter_underground_gigant_portion_1")
		proceed_spawn("gigant_strong", vector():set(24.500,-0.002,-36.400),27993,1652, 1, "jupiter_underground_gigant_portion_2")
		proceed_spawn("burer_weak", vector():set(12.600,4.669,-113.400),21344,1662, 1, "jupiter_underground_burer_portion_1")
		proceed_spawn("burer_weak", vector():set(35.700,4.357,-141.400),31178,1664, 1, "jupiter_underground_burer_portion_2")
		proceed_spawn("psy_burer", vector():set(53.900,4.177,-172.200),36806,1667, 1, "jupiter_underground_burer_portion_3")
		proceed_spawn("zombie_kamikaze", vector():set(81.900,4.994,-235.200),40737,1670, 1, "jupiter_underground_kamikaze_portion_1")
		proceed_spawn("zombie_kamikaze", vector():set(81.900,6.032,-207.200),40777,1670, 1, "jupiter_underground_kamikaze_portion_2")
	end

	if has_alife_info("freeplay") then
		if level_name == "limansk" then
			proceed_spawn("zombie_kamikaze", vector():set(30.100,3.364,313.600),42550,1558, 1, "limansk_zombie_portion_1")
			proceed_spawn("zombie_kamikaze", vector():set(51.100,3.296,262.500),52112,1557, 1, "limansk_zombie_portion_2")
			proceed_spawn("zombie_kamikaze", vector():set(76.300,7.338,249.900),58770,1556, 1, "limansk_zombie_portion_3")
			proceed_spawn("zombie_kamikaze", vector():set(86.100,3.366,260.400),59718,1557, 2, "limansk_zombie_portion_4")
			proceed_spawn("zombie_kamikaze", vector():set(32.900,3.298,286.300),44129,1557, 2, "limansk_zombie_portion_5")
			proceed_spawn("zombie_kamikaze", vector():set(57.400,9.070,217.000),54142,1555, 2, "limansk_zombie_portion_6")
			proceed_spawn("rat_2", vector():set(34.300,28.540,197.400),44892,1536, 3, "limansk_rat_portion_1")
			proceed_spawn("rat_3", vector():set(37.100,28.540,196.700),46535,1536, 3, "limansk_rat_portion_2")
			proceed_spawn("rat_4", vector():set(35.700,28.540,193.200),45706,1536, 3, "limansk_rat_portion_3")
			proceed_spawn("fracture_weak", vector():set(-23.800,12.970,194.600),13432,1554, 2, "limansk_fracture_portion_1")
			proceed_spawn("zombie_kamikaze", vector():set(-30.100,-4.007,147.000),10562,1553, 3, "limansk_zombie_portion_7")
			proceed_spawn("zombie_kamikaze", vector():set(14.000,-2.004,122.500),33665,1553, 3, "limansk_zombie_portion_8")
			proceed_spawn("electro_chimera", vector():set(-18.200,-4.005,94.500),16239,1551, 1, "limansk_chimera_portion_1")
			proceed_spawn("zombie_kamikaze", vector():set(-67.900,-7.007,74.200),557,1550, 2, "limansk_zombie_portion_9")
			proceed_spawn("zombie_kamikaze", vector():set(-42.000,-7.007,18.900),5717,1550, 2, "limansk_zombie_portion_10")
			proceed_spawn("zombie_kamikaze", vector():set(-3.500,-5.004,-77.000),22713,1532, 2, "limansk_zombie_portion_11")
			proceed_spawn("zombie_kamikaze", vector():set(-2.100,-5.000,-128.100),23430,1547, 2, "limansk_zombie_portion_12")
			proceed_spawn("zombie_kamikaze", vector():set(-23.100,-5.065,-165.900),13553,1539, 2, "limansk_zombie_portion_13")
			proceed_spawn("zombie_kamikaze", vector():set(-46.900,-4.995,-133.000),4151,1547, 2, "limansk_zombie_portion_14")
			proceed_spawn("fracture_weak", vector():set(-46.200,-5.004,-235.200),4254,1545, 2, "limansk_fracture_portion_2")
			proceed_spawn("gigant_strong", vector():set(38.500,-0.004,-278.600),47149,1542, 1, "limansk_gigant_portion_1")
		end

		if level_name == "hospital" then
			proceed_spawn("zombie_1", vector():set(-81.900,32.395,809.200),5093,1612, 1, "hospital_zombie_portion_1")
			proceed_spawn("zombie_rotten_1", vector():set(-81.900,32.511,810.600),5095,1612, 1, "hospital_zombie_portion_2")
			proceed_spawn("zombie_rotten_2", vector():set(-84.000,32.489,809.900),4485,1612, 1, "hospital_zombie_portion_3")
			proceed_spawn("burer_weak", vector():set(-92.400,24.224,762.300),1851,1615, 1, "hospital_burer_portion_1")
			proceed_spawn("zombie_1", vector():set(-87.500,32.064,739.200),3336,1580, 1, "hospital_zombie_portion_4")
			proceed_spawn("zombie_rotten_1", vector():set(-86.800,32.076,739.200),3539,1580, 1, "hospital_zombie_portion_5")
			proceed_spawn("zombie_rotten_2", vector():set(-86.800,25.131,735.000),3536,1616, 1, "hospital_zombie_portion_6")
			proceed_spawn("burer_weak", vector():set(-71.400,25.089,724.500),7677,1576, 1, "hospital_burer_portion_2")
			proceed_spawn("psy_burer", vector():set(-75.600,31.955,700.700),7103,1586, 1, "hospital_burer_portion_3")
			proceed_spawn("psy_burer", vector():set(-91.700,31.955,693.700),2061,1583, 1, "hospital_burer_portion_4")
			proceed_spawn("zombie_1", vector():set(-92.400,24.954,648.900),1668,1591, 1, "hospital_zombie_portion_7")
			proceed_spawn("zombie_rotten_1", vector():set(-72.800,25.058,627.900),7489,1590, 1, "hospital_zombie_portion_8")
			proceed_spawn("zombie_rotten_2", vector():set(-96.600,31.956,628.600),714,1619, 1, "hospital_zombie_portion_9")
			proceed_spawn("rat_2", vector():set(-87.500,21.245,572.600),3172,1605, 3, "hospital_rat_portion_4")
			proceed_spawn("rat_3", vector():set(-86.100,21.076,574.000),3623,1605, 3, "hospital_rat_portion_5")
			proceed_spawn("rat_4", vector():set(-84.000,21.400,576.100),4316,1605, 3, "hospital_rat_portion_6")
			proceed_spawn("m_controller_old", vector():set(-87.500,21.245,572.600),3172,1605, 1, "hospital_controller_portion_1")
			proceed_spawn("rat_2", vector():set(-100.800,25.056,612.500),313,1601, 3, "hospital_rat_portion_7")
			proceed_spawn("rat_3", vector():set(-101.500,25.056,611.100),243,1601, 3, "hospital_rat_portion_8")
			proceed_spawn("rat_4", vector():set(-100.800,25.056,610.400),310,1601, 3, "hospital_rat_portion_9")
		end

		if level_name == "stancia_2" then
			proceed_spawn("zombie_kamikaze", vector():set(267.400,-0.011,150.500),130847,1565, 3, "stancia_2_zombie_portion_1")
			proceed_spawn("zombie_kamikaze", vector():set(345.800,-0.003,196.700),174501,1565, 3, "stancia_2_zombie_portion_2")
			proceed_spawn("electro_chimera", vector():set(408.100,-0.003,240.100),196466,1565, 1, "stancia_2_chimera_portion_1")
			proceed_spawn("zombie_kamikaze", vector():set(430.500,-0.105,289.800),201465,1565, 3, "stancia_2_zombie_portion_3")
			proceed_spawn("zombie_kamikaze", vector():set(361.900,-0.070,350.700),183314,1570, 3, "stancia_2_zombie_portion_4")
			proceed_spawn("zombie_kamikaze", vector():set(331.800,-0.011,430.500),166055,1570, 3, "stancia_2_zombie_portion_5")
			proceed_spawn("zombie_kamikaze", vector():set(288.400,-0.003,373.100),143840,1570, 3, "stancia_2_zombie_portion_6")
			proceed_spawn("zombie_kamikaze", vector():set(242.900,-0.011,413.000),118089,1568, 3, "stancia_2_zombie_portion_7")
			proceed_spawn("gigant_normal", vector():set(219.800,-0.020,350.700),106642,1571, 1, "stancia_2_gigant_portion_1")
			proceed_spawn("rat_2", vector():set(315.700,-0.003,301.700),157285,1570, 6, "stancia_2_rat_portion_1")
			proceed_spawn("rat_3", vector():set(316.400,-0.003,302.400),157641,1570, 6, "stancia_2_rat_portion_2")
			proceed_spawn("rat_4", vector():set(316.400,-0.011,303.800),157643,1570, 6, "stancia_2_rat_portion_3")
			proceed_spawn("zombie_kamikaze", vector():set(228.900,-0.011,247.800),110909,1571, 3, "stancia_2_zombie_portion_8")
			proceed_spawn("zombie_plague", vector():set(136.500,0.000,308.000),61581,1572, 3, "stancia_2_zombie_portion_9")
			proceed_spawn("gigant_strong", vector():set(55.300,-0.067,246.400),26180,1567, 1, "stancia_2_gigant_portion_2")
			proceed_spawn("zombie_plague", vector():set(116.900,-0.105,394.100),52563,1572, 3, "stancia_2_zombie_portion_10")
			proceed_spawn("electro_chimera", vector():set(60.900,0.000,375.900),28187,1572, 1, "stancia_2_chimera_portion_2")
			proceed_spawn("zombie_plague", vector():set(10.500,-0.003,344.400),7595,1572, 3, "stancia_2_zombie_portion_11")
		end
	end
	forced_spawn = false
end

-- »нициализаци€ модул€ (не перемещать из конца скрипта)
local FuncByName = {
	["rsp"] = timer_spawn
}
local sModule = script_name()
local bInit = false --/ флаг инициализации модул€
function init()
	if bInit then return end --/>
	printf(sModule..":init:>") --/#~#
	if FuncByName then
		if not _G["ogsm_timers"] then _G["ogsm_timers"] = {} end
		local t = _G["ogsm_timers"]
		for name,func in pairs(FuncByName) do t[name] = func end
		FuncByName = nil
	end
	bInit = true
end

---------------------------------- –еспавнер монстров ---------------------------------
------------------------------ Copyright 2007-2011 DEXXX ------------------------------