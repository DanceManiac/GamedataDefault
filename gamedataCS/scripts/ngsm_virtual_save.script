--" Эмулятор дополнительного сохранения.
--" Создаёт текстовый фаил-сейв, который ,теоретически, 
--" не может переполнится. Гораздо удобнее и главное надёжнее чем pstor
--" Автор: Shoker (ай, маладэц!), адаптация к OGSM: Max Warlock (запарилсо вырезать...)
-- local save_file = "user\\savedgames_add\\" -- Путь к папке с сейвами мода  (Ещё прописан в скрипте bind_stalker.script!!!)
local save_file = "savedgames_add\\" -- Путь к папке с сейвами мода  (Ещё прописан в скрипте bind_stalker.script!!!)
local init = false -- Флаг инициализации общей таблицы, меняется автоматом
local tables = {}  -- Таблица со списком всех save-таблиц
params_table = {} -- Таблица, аналог pstor 
obj_params_table = {} -- таблица параметров игровых объектов

-- Апдейт
local tg_upd = 0

function update()
    chek_obj_tbl()
end
-- Собираем таблиц при загрузке игры.
function load()
	if init==true then
 	 for k, v in pairs(tables) do
		-- Собираем таблицу из кусочков
		 local cnt = load_from_table("simbol_cnt_"..k) -- Кол-во частей
		 if cnt ~= nil and load_from_table("1"..tostring(k)) ~= nil then
			 local res = ""
			 for i=1, cnt do
			   res=res..load_from_table(i..tostring(k)) -- Собираем табличку воедино в 1 строку
			   del_var(i..k)
			 end
			 save_to_table(k, res) 
		 else --\\ какая то ошибка, не загружаем таблицу
		      tables[k]=nil
			  params_table["itstable_"..k]=nil
		 end
		del_var("simbol_cnt_"..k)
	 end
	init=false
	end
end
-- Проверка таблиц виртуальных объектов, если объекта в игре нету - чистим его свойства
function chek_obj_tbl()
    if obj_params_table==nil then return end
    for id, p in pairs(obj_params_table) do
        if p~=nil then
            if alife():object(id)==nil then
                for k, v in pairs(obj_params_table[id]) do
                    del_var(id.."=>"..k)
                end
                obj_params_table[id] = nil
            end
        end
    end
end
-- Сохраняет информацю в таблицу.
function save_to_table(variable_name, value, tbl)
	if tbl==true then 	-- таблицы по другом сохраняем
		tables[variable_name]=true
		params_table["itstable_"..variable_name]=variable_name
	end
	params_table[variable_name]=value
end
-- Берёт информацю из таблици.
function load_from_table(variable_name, v_if_not_f)
    local val = params_table[variable_name]
    if val==nil then
        val = v_if_not_f
    end
    return val
end                                                                           
-- Удаляет значение из таблици
function del_var(var)
   save_to_table(var, nil)
end
-- Очищает таблицу параметров объекта
function del_obj_all(id)
    local tbl = obj_params_table[id]
    if tbl then
        for var, val in pairs(tbl) do
            ngsm.del_obj(id, var)
        end
    end
end
-- При сохраненнии таблици, её надо разрезать.
function save_table(name, str, file)
    local lengt = string.len(str) -- Длина строки (Меняется)
    local lenC  = string.len(str) -- Длина строки (const) 
    local max_lengt = 950         -- Максимальная длина строки
    local cnt = 1
    local c1=0
    local c2=max_lengt 
    while lengt > max_lengt do
        lengt=lengt-max_lengt
        file:write(cnt..name.."|"..string.sub(str, c1 , c2).."|string", "\n")
        cnt=cnt+1
        c1=c2+1
        c2=c2+max_lengt 
    end
    -- Записываем остаток
    if lengt~=0 then
        c1 = (lenC-lengt)+1
        c2 = lenC
        file:write(cnt..name.."|"..string.sub(str, c1 , c2).."|string", "\n")
    end
    file:write("simbol_cnt_"..name.."|"..cnt.."|number", "\n") -- Записываем кол-во частей 
end
-- Сохраняет таблицу в фаил (Вызывается при сохранении)
function save_to_file(filename)
    local file = io.open(save_file..filename..".sav", "w" )
    for k,v in pairs(params_table) do
        if v ~= nil then
            if not IsTbl(k) then
		        if ngsm.find_in_string(k, "=>") then	-- это параметр НПС
			        local obj_tbl = ngsm.str_expl(k, "=>")
			        local obj_id = obj_tbl[1]
			        local sobj = alife():object(tonumber(obj_id))
			        if sobj ~= nil then -- проверяем что объект всё ещё в игре и есть смысл его записывать
				        local text = tostring( k.."|"..tostring(v).."|"..type(v))
				        file:write(text, "\n")
			        end
		        else
			        local text = tostring( k.."|"..tostring(v).."|"..type(v))
			        file:write(text, "\n")
		        end
            else	-- сейвим таблицу
		        save_table(k, v, file)
            end
        end
    end
    file:close()
end

-- Загружает таблицу из фаила (Вызывается при загрузке)
function load_from_file(g_sfn)
    if g_sfn==nil then
	    return
	end
	local file = io.open(save_file..g_sfn..".sav", "r" )
	if file ~= nil then
           for line in file:lines() do 
                if line~=nil then
                    local tbl = ngsm.str_expl(line, "|")
                        if string.find(tbl[1],"itstable_") then
                            tables[real_value(tbl[2],tbl[3])]=true
			                params_table[tbl[1]]=tbl[2]
                        else
                            if ngsm.find_in_string(tbl[1], "=>") then
				                local obj_tbl = ngsm.str_expl(tbl[1], "=>")
				                local id = tonumber(obj_tbl[1])
				                ngsm.save_obj(id, obj_tbl[2], real_value(tbl[2],tbl[3]) )
                    else
				        params_table[tbl[1]]=real_value(tbl[2],tbl[3]) 
                    end
                end
            end
        end
    end
    init = true
	load() --\\ Формируем таблицы
end


-- Возвращает параметр в реальном формате, а не текстовом
function real_value(value,tv)
local val
 if tv == "nil" then
    return nil
 end
 if tv == "boolean" then
   val = toboolean(value)  
 end
 if tv == "number" then
   val = tonumber(value)
 end
 if tv == "string" then
   val = tostring(value)
 end
return val
end

function toboolean(s)
 if s=="true" then
  return true
 end
 if s=="false" then
  return false
 end
end
-- Генерируем имя сохранения
function gen_save_name()
    local n = "autosave"
    if alife() then
        local d = level.get_time_days()
        local h = level.get_time_hours()
        local m = level.get_time_minutes()
		if h < 10 then
		    h = "0"..h
		end
        local r = math.random(1000,10000)
        --n = user_name().."_"..level.name().."_"..d.."_("..h.."_"..m..") "..r
		n = game.translate_string(level.name()).."_"..d.."_"..h.."_"..m.."_"..user_name()..r
    end
    return n
end

function IsTbl(name) 
    if tables[name]==true then
        return true
    end
    return false
end

--' На всякий случаи чистим таблицы, если игрок завершил игру и вышел в меню
--' ui_main_menu.script
function OnDisconect()
	params_table = {}
	obj_params_table = {}
end