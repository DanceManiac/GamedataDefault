function give_compass(first_speaker, second_speaker)
	if second_speaker:object("af_compass") ~= nil then
		dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "af_compass")
	end
end
	
function actor_has_compass(first_speaker, second_speaker)
	return first_speaker:object("af_compass") ~= nil 	
end
	
function actor_hasnt_compass(first_speaker, second_speaker)
	return not actor_has_compass(first_speaker, second_speaker)
end

function leshiy_reward_very_good(first_speaker, second_speaker)
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_fuzz_kolobok")
end

function leshiy_reward_good(first_speaker, second_speaker)
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_fire")
end

function leshiy_reward_averge(first_speaker, second_speaker)
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_soul")
end

function leshiy_reward_bead(first_speaker, second_speaker)
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_eye")
end

function forester_reward_for_compass(first_speaker, second_speaker)
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_dummy_pellicle")
end

function leshiy_reward_very_bead(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "kolbasa", "in")
end

function give_red_forest_pda_map(first_speaker, second_speaker)
		if second_speaker:object("red_forest_pda_map") ~= nil then
			dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "red_forest_pda_map")
		        dialogs.relocate_money(first_speaker, 1000, "in")
		end
end

function actor_has_red_forest_pda_map(first_speaker, second_speaker)
		return first_speaker:object("red_forest_pda_map") ~= nil 	
end

function give_red_forest_pda_map_2(first_speaker, second_speaker)
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "red_forest_pda_map_2")
end

function ahuntesr_give_reward(first_speaker, second_speaker)
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, "af_gravi")
end

function give_strelok_treasure(first_speaker, second_speaker)
	treasure_manager.give_treasure("red_treasure_25")
end

-- Kirgudu
-- Есть КПК Стрелка и Клыка (оба)
function actor_has_pda_strelok_fang(first_speaker, second_speaker)
	return first_speaker:object("device_pda_strelok") ~= nil and first_speaker:object("device_pda_fang") ~= nil
end

-- Есть только КПК Стрелка
function actor_has_pda_strelok_only(first_speaker, second_speaker)
	return first_speaker:object("device_pda_strelok") ~= nil and first_speaker:object("device_pda_fang") == nil
end

-- Есть только КПК Клыка
function actor_has_pda_fang_only(first_speaker, second_speaker)
	return first_speaker:object("device_pda_strelok") == nil and first_speaker:object("device_pda_fang") ~= nil
end

-- Отдаём оба КПК
function give_pda_strelok_fang(first_speaker, second_speaker)
	dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "device_pda_strelok")
	dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "device_pda_fang")
end

-- Отдаём только КПК Стрелка
function give_pda_strelok_only(first_speaker, second_speaker)
	dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "device_pda_strelok")
end

-- Отдаём только КПК Клыка
function give_pda_fang_only(first_speaker, second_speaker)
	dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "device_pda_fang")
end
-- Kirgudu

function red_forest_back_to_the_gate(first_speaker, second_speaker)
	xr_effects.give_inited_task(nil, nil, {"storyline", "red_forest_back_to_the_gate", "dolg"})
end
