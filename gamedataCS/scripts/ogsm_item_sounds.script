--[[ ----------------------------------------------------------------------------------------------
 File       : ogsm_item_sounds.script
 Description: ќзвучка при вынимании/убирании ножа, болта, гранат.
 Copyright  : 2011 © Faction_Fronts_v2.2.1_Beta (использован скрипт itemsounds.script)
 Author     : 828 Studios
 Last edit  : 06.06.2019
--]] ----------------------------------------------------------------------------------------------

function check_knife()			
	
	local knife_deployed = check_knife_deployed()
	
	if (knife_deployed ~= knife_switch) then
		if knife_deployed then
			local snd_obj = sound_object ( [[weapons\bino_draw]] )
			--snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
			snd_obj:play_at_pos(db.actor, vector():set(0,0,0), 0, sound_object.s2d)
		else 
			local snd_obj = sound_object ( [[weapons\bino_holster]] )
			--snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
			snd_obj:play_at_pos(db.actor, vector():set(0,0,0), 0, sound_object.s2d)
		end
	end
	knife_switch = knife_deployed
end

function check_knife_deployed()

	local active_slot = db.actor:active_slot() --assigns value in active slot to variable named so

	if active_slot == 0 then
		return true --knife_deployed is TRUE if the active slot is 0
	else
		return false
	end			
		
end

function check_bolt()			
	
	local bolt_deployed = check_bolt_deployed()
	
	if (bolt_deployed ~= bolt_switch) then
		if bolt_deployed then
			local snd_obj = sound_object ( [[weapons\bino_draw]] )
			--snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
			snd_obj:play_at_pos(db.actor, vector():set(0,0,0), 0, sound_object.s2d)
		else 
			local snd_obj = sound_object ( [[weapons\bino_holster]] )
			--snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
			snd_obj:play_at_pos(db.actor, vector():set(0,0,0), 0, sound_object.s2d)
		end
	end
	bolt_switch = bolt_deployed
end

function check_bolt_deployed()

	local active_slot = db.actor:active_slot() --assigns value in active slot to variable named so

	if active_slot == 5 then
		return true --bolt_deployed is TRUE if the active slot is 5
	else
		return false
	end			
		
end

function check_grenade()			
	
	local grenade_deployed = check_grenade_deployed()
	
	if (grenade_deployed ~= grenade_switch) then
		if grenade_deployed then
			local snd_obj = sound_object ( [[weapons\bino_draw]] )
			--snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
			snd_obj:play_at_pos(db.actor, vector():set(0,0,0), 0, sound_object.s2d)
		else 
			local snd_obj = sound_object ( [[weapons\bino_holster]] )
			--snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
			snd_obj:play_at_pos(db.actor, vector():set(0,0,0), 0, sound_object.s2d)
		end
	end
	grenade_switch = grenade_deployed
end

function check_grenade_deployed()

	local active_slot = db.actor:active_slot() --assigns value in active slot to variable named so

	if active_slot == 3 then
		return true --grenade_deployed is TRUE if the active slot is 3
	else
		return false
	end			
		
end

function do_switch()
	
	if isWeapon(db.actor:active_item()) then
		local weapon = db.actor:active_item():id()
		local num = math.random(1, 3) --randomly generated number decides draw sound
		local snd_obj
		
		if switchbool == true then
			old_item = weapon
			switchbool = false
		end	
		
		if (weapon == old_item) == false then
			
			if num == 1 then
					snd_obj = sound_object ( [[weapons\draw\a]] )
				elseif num == 2 then
					snd_obj = sound_object ( [[weapons\draw\b]] )
				elseif num == 3 then
					snd_obj = sound_object ( [[weapons\draw\c]] )
			end --checking random number
			
			snd_obj:play_at_pos(db.actor, vector():set(0,0,0), 0, sound_object.s2d)		
			
		end --if weapon ~= old_item
		old_item = db.actor:active_item():id()
	else 
		old_item = 0
	end --if isWeapon

end --end function