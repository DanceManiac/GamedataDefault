function main ()

lvl_escape_start.main()

local infos_table = {
"esc_actor_inside",
"esc_actor_comes_2_trader",
"esc_actor_come_first",
"esc_trader_hello_first_played",
"esc_actor_inside_traders_dung",
"esc_reach_trader_complete",
"esc_trader_bye_first_search_played",
"esc_actor_inside_stalkerbase",
"esc_reach_stalker_base_complete",
"esc_stalker_leader_meet",
"esc_military_comm_talked",
"ct1_cm0",
"esc_actor_mission_stalker_leader",
"esc_leader_talked2",
"esc_actor_mission_stalker_leader_done",
"esc_actor_inside_bridge",
"esc_actor_inside_bridge_1",
"mil_squad_2_5_9_dead",
"esc_mission_stalker_leader_complete",
"esc_7_11_mil_1_dead",
"esc_7_11_mil_3_dead",
"esc_7_11_mil_2_dead",
"esc_mission_2_stalker_leader_complete",
"esc_com_tell_about_habar",
"esc_habar_podval_spawn",
"esc_habar_tonnel_spawn",
"esc_habar_mill_spawn",
"esc_prisoner_complete_dialog",
"esc_actor_inside_habar",
"esc_take_habar_complete",
"esc_actor_inside_traders_dung_last",
"esc_trader_hello_return_played",
"esc_bring_habar_complete",
"gar_story_find_diggers_started"
}
local actor = db.actor

for k,v in pairs(infos_table) do
	actor:give_info_portion(v)
end

if level.name() == "garbage" and not task_manager.get_task_manager().inited_tasks["csky_general_gar_story_find_diggers"] then
	xr_effects.give_inited_task(nil, nil, {"storyline", "gar_story_find_diggers", "csky"})
end

xr_effects.clear_smart_terrain(nil,nil,{"esc_smart_terrain_5_9"})
xr_effects.clear_smart_terrain(nil,nil,{"esc_smart_terrain_7_11"})
	
end
