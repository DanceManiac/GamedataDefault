------------------------ Copyright 2010-2019 Minister, Kirgudu ------------------------
-------------------------- Менеджер заказов редких предметов --------------------------
------------------------- Last edit (by Kirgudu): 09.01.2019 --------------------------

local rare_manager = nil
local min_update_hours = 48 --/ минимальное время обновления ассортимента у торговцев, часы
local max_update_hours = 96 --/ максимальное время обновления ассортимента у торговцев, часы

--Иконки NPCов (для новостей)
local icon_by_name = {
	["mar_csky_trader"] = "icon_stalker_suslov",
	["esc_stalker_trader"] = "icon_stalker_shilov",
	["gar_bandit_trader"] = "icon_stalker_zyb",
	["val_freedom_trader"] = "icon_stalker_ashot",
	["agr_duty_trader"] = "icon_stalker_mityai",
	["agr_stalker_base_trader"] = "icon_stalker_catbird"
}

--Заголовки новостей от NPCов (для новостей)
local news_title_text_by_name = {
	["mar_csky_trader"] = game.translate_string("st_tip").." "..game.translate_string("mar_csky_trader_name")..":",
	["esc_stalker_trader"] = game.translate_string("st_tip").." "..game.translate_string("esc_trader_stalkerbase_name")..":",
	["gar_bandit_trader"] = game.translate_string("st_tip").." "..game.translate_string("gar_bandit_trader_name")..":",
	["val_freedom_trader"] = game.translate_string("st_tip").." "..game.translate_string("val_freedom_trader_name")..":",
	["agr_duty_trader"] = game.translate_string("st_tip").." "..game.translate_string("agr_duty_base_trader_name")..":",
	["agr_stalker_base_trader"] = game.translate_string("st_tip").." "..game.translate_string("agr_stalker_base_trader_name")..":"
}

--Текст новостей от NPCов (для новостей)
local news_text_by_name = {
	["mar_csky_trader"] = game.translate_string("mar_csky_trader_news_text_by_name"),
	["esc_stalker_trader"] = game.translate_string("esc_stalker_trader_news_text_by_name"),
	["gar_bandit_trader"] = game.translate_string("gar_bandit_trader_news_text_by_name"),
	["val_freedom_trader"] = game.translate_string("val_freedom_trader_news_text_by_name"),
	["agr_duty_trader"] = game.translate_string("agr_duty_trader_news_text_by_name"),
	["agr_stalker_base_trader"] = game.translate_string("agr_stalker_base_trader_news_text_by_name")
}

class "RareItemsManager"
function RareItemsManager:__init()
	self.ini_file = ini_file("misc\\rare_items.ltx")

	self.traders_list = {}
	self.rare_items = {}
	self.rare_items_next = {}
	self.rare_items_initialized = {}
	self.rare_items_disabled = {}

	local n = self.ini_file:line_count("traders")
	for i = 0, n-1 do
		local result, value = self.ini_file:r_line("traders", i, "", "")
		local nn = self.ini_file:line_count(value)

		self.traders_list[value] = {} --содержит список всех NPCов (даже дохлых) и все их товары
		self.rare_items[value] = {} --содержит список NPCов и их доступные к покупке товары
		self.rare_items_next[value] = {} --содержит список NPCов и их доступные к покупке в следующий раз товары

		for ii = 0, nn-1 do
			local result2, value2 = self.ini_file:r_line(value, ii, "", "")
			table.insert(self.traders_list[value], value2)
		end
	end
end

--"Зарандомить" предметы сразу для всех (начало игры)
function RareItemsManager:rnd_all()
	local s_npc = nil
	for k,v in pairs(self.traders_list) do
		self.rare_items[k] = randomlist(deepcopy(v), 3)
		self.rare_items_next[k] = randomlist(deepcopy(v), 3)
		s_npc = alife():object(k)
		math.randomseed(s_npc.id + device():time_global())
		local update_time = math.random(min_update_hours, max_update_hours)
		if s_npc then ogsm.g_start_timer("rim", 0, update_time, 0, s_npc.id) end
	end
end

--"Зарандомить" предметы для кого-то конкретного
function RareItemsManager:rnd(who)
	local s_npc = alife():object(who)
	if s_npc and self.traders_list[who] and self.traders_list[who] ~= nil then
		local npc = level.object_by_id(s_npc.id)
		if self.rare_items_initialized[who] == true
		   and (game_relations.is_factions_enemies(db.actor:character_community(), s_npc:community()) or game_relations.is_npc_enemy_to_actor(npc))
		then
			db.actor:disable_info_portion(who.."_rareitems_news")
			self.rare_items[who] = {}
			self.rare_items_next[who] = {}
			self.rare_items_disabled[who] = true
			return
		end
		if npc and npc:is_talking() then --затычка, чтобы предметы не "рандомились" при разговоре с NPC
			ogsm.g_start_timer("rim", 0, 1, 0, s_npc.id)
			if has_alife_info(who.."_rareitems_news") then self:send_news(who, s_npc) end
			return
		end
		self.rare_items[who] = deepcopy(self.rare_items_next[who])
		self.rare_items_next[who] = randomlist(deepcopy(self.traders_list[who]), 3)
		if has_alife_info(who.."_rareitems_news") then self:send_news(who, s_npc) end
		math.randomseed(s_npc.id + device():time_global())
		local update_time = math.random(min_update_hours, max_update_hours)
		ogsm.g_start_timer("rim", 0, update_time, 0, s_npc.id)
	end
end

function RareItemsManager:check_dead()
	for k,v in pairs(self.traders_list) do
		if is_dead(alife():object(k)) then
			self.rare_items[k] = nil
			self.rare_items_next[k] = nil
			self.rare_items_initialized[k] = nil
			self.rare_items_disabled[k] = nil
		end
	end
end

--Отправка новостей
function RareItemsManager:send_news(who, s_npc)
	local npc_name = s_npc:name()
	xr_sound.set_sound_play(db.actor:id(), "pda_tips")
	db.actor:give_game_news(news_title_text_by_name[npc_name], news_text_by_name[npc_name], icon_by_name[npc_name], 0, 5000, 1)
end

function RareItemsManager:save(packet)
	self:check_dead() --убираем из таблиц rare_items, rare_items_next, rare_items_initialized и rare_items_disabled дохлых NPC
	local counter = 0
	for k,v in pairs(self.rare_items) do
		counter = counter + 1
	end
	packet:w_u8(counter)
	for k,v in pairs(self.rare_items) do
		packet:w_u16(alife():object(k).id)
		local items_list = ""
		for i = 1, #v do
			items_list = items_list..","..v[i]
		end
		packet:w_stringZ(items_list)

		local v_next = self.rare_items_next[k]
		items_list = ""
		for i = 1, #v_next do
			items_list = items_list..","..v_next[i]
		end
		packet:w_stringZ(items_list)

		packet:w_bool(self.rare_items_initialized[k] == true)
		packet:w_bool(self.rare_items_disabled[k] == true)
	end
end

function RareItemsManager:load(packet)
	local counter = packet:r_u8()
	for i = 1, counter do
		local npc_id = packet:r_u16()
		local npc = alife():object(npc_id)
		if npc and npc ~= nil then
			npc = npc:name()
			local items_list = packet:r_stringZ()
			local n = 1
			for w in string.gmatch(items_list, "[^%,]+") do
				self.rare_items[npc][n] = w
				n = n + 1
			end

			items_list = packet:r_stringZ()
			n = 1
			for w in string.gmatch(items_list, "[^%,]+") do
				self.rare_items_next[npc][n] = w
				n = n + 1
			end

			self.rare_items_initialized[npc] = packet:r_bool()
			self.rare_items_disabled[npc] = packet:r_bool()
		end
	end
end

-----

function is_dead(s_npc)
	return not s_npc or (s_npc.alive and not s_npc:alive())
end

function get_inv_name(section)
	return game.translate_string(system_ini():r_string(section, "inv_name"))
end

function get_cost(section, trader)
	local multiplier = 1
	if get_rim().ini_file:section_exist("multiplier_condition") and get_rim().ini_file:line_exist("multiplier_condition", trader) then
		local condlist = xr_logic.parse_condlist(nil, "rare_items", "multiplier_condition", get_rim().ini_file:r_string("multiplier_condition", trader))
		multiplier = xr_logic.pick_section_from_condlist(db.actor, db.actor, condlist)
	end
	return system_ini():r_s32(section, "cost") * multiplier
end

function get_rim()
	if rare_manager == nil then
		rare_manager = RareItemsManager()
	end
	return rare_manager
end

function timer_rnd(name, oid)
	local who = alife():object(oid)
	if who then
		if is_dead(who) then return end
		get_rim():rnd(who:name())
	end
end

-- Инициализация модуля (не перемещать из конца скрипта)
local FuncByName = {
	["rim"] = timer_rnd
}
local sModule = script_name()
local bInit = false --/ флаг инициализации модуля
function init()
	if bInit then return end --/>
	printf(sModule..":init:>") --/#~#
	if FuncByName then
		if not _G["ogsm_timers"] then _G["ogsm_timers"] = {} end
		local t = _G["ogsm_timers"]
		for name,func in pairs(FuncByName) do t[name] = func end
		FuncByName = nil
	end
	bInit = true
end

-------------------------- Менеджер заказов редких предметов --------------------------
------------------------ Copyright 2010-2019 Minister, Kirgudu ------------------------