------------------------ Copyright 2010-2019 Minister, Kirgudu ------------------------
-------------------- Обработка диалогов по заказам редких предметов -------------------
---------------------------- Last edit (Kirgudu): 09.01.19 ----------------------------


function rare_list_text(first_speaker, dialog_id, phrase_id)
	if next(ogsm_rare_items_manager.get_rim().rare_items[first_speaker:name()]) then
		return game.translate_string("ogsm_rare_items_are_available")
	end
	return game.translate_string("ogsm_rare_items_missing")
end

function rare_list(first_speaker, second_speaker, dialog_id, phrase_id)
	local rare_items = ogsm_rare_items_manager.get_rim().rare_items[first_speaker:name()]

	for k,v in pairs(rare_items) do
		local text = ogsm_rare_items_manager.get_inv_name(rare_items[k])..". "..game.translate_string("st_base_cost")..": "..ogsm_rare_items_manager.get_cost(rare_items[k], first_speaker:name()).." "..game.translate_string("st_rubles")
		db.actor:give_talk_message2("", text, "ui_iconsTotal_found_money", "iconed_answer_item")
	end
end

function check_first_rare_item(first_speaker, second_speaker, dialog_id, prev_phrase_id, phrase_id)
	local rare_items = ogsm_rare_items_manager.get_rim().rare_items[second_speaker:name()]
	return rare_items[1] and db.actor:money() >= ogsm_rare_items_manager.get_cost(rare_items[1], second_speaker:name())
end

function check_second_rare_item(first_speaker, second_speaker, dialog_id, prev_phrase_id, phrase_id)
	local rare_items = ogsm_rare_items_manager.get_rim().rare_items[second_speaker:name()]
	return rare_items[2] and db.actor:money() >= ogsm_rare_items_manager.get_cost(rare_items[2], second_speaker:name())
end

function check_third_rare_item(first_speaker, second_speaker, dialog_id, prev_phrase_id, phrase_id)
	local rare_items = ogsm_rare_items_manager.get_rim().rare_items[second_speaker:name()]
	return rare_items[3] and db.actor:money() >= ogsm_rare_items_manager.get_cost(rare_items[3], second_speaker:name())
end

function give_first_rare_item(first_speaker, second_speaker, dialog_id, phrase_id)
	local rare_items = ogsm_rare_items_manager.get_rim().rare_items[second_speaker:name()]
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, rare_items[1])
	dialogs.relocate_money(second_speaker, ogsm_rare_items_manager.get_cost(rare_items[1], second_speaker:name()), "out")
	table.remove(rare_items, 1)
end

function give_second_rare_item(first_speaker, second_speaker, dialog_id, phrase_id)
	local rare_items = ogsm_rare_items_manager.get_rim().rare_items[second_speaker:name()]
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, rare_items[2])
	dialogs.relocate_money(second_speaker, ogsm_rare_items_manager.get_cost(rare_items[2], second_speaker:name()), "out")
	table.remove(rare_items, 2)
end

function give_third_rare_item(first_speaker, second_speaker, dialog_id, phrase_id)
	local rare_items = ogsm_rare_items_manager.get_rim().rare_items[second_speaker:name()]
	dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, rare_items[3])
	dialogs.relocate_money(second_speaker, ogsm_rare_items_manager.get_cost(rare_items[3], second_speaker:name()), "out")
	table.remove(rare_items, 3)
end

function not_news(first_speaker, second_speaker, dialog_id, prev_phrase_id, phrase_id)
	return db.actor:dont_has_info(second_speaker:name().."_rareitems_news")
end

function have_news(first_speaker, second_speaker, dialog_id, prev_phrase_id, phrase_id)
	return db.actor:has_info(second_speaker:name().."_rareitems_news")
end

function allow_news(first_speaker, second_speaker, dialog_id, phrase_id)
	db.actor:give_info_portion(second_speaker:name().."_rareitems_news")
end

function not_allow_news(first_speaker, second_speaker, dialog_id, phrase_id)
	db.actor:disable_info_portion(second_speaker:name().."_rareitems_news")
end

function rare_items_allowed(first_speaker, second_speaker)
	local npc = dialogs.who_is_npc(first_speaker, second_speaker)
	local mgr = ogsm_rare_items_manager.get_rim()
	local npc_name = npc:name()
	mgr.rare_items_initialized[npc_name] = true
	return mgr.rare_items_disabled[npc_name] ~= true
end


-------------------- Обработка диалогов по заказам редких предметов -------------------
------------------------ Copyright 2010-2019 Minister, Kirgudu ------------------------